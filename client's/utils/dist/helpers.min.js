"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.save=save,exports.getValueFor=getValueFor,exports.formatDate=formatDate,exports.subtractDays=subtractDays,exports.numberWithCommas=numberWithCommas,exports.proc=proc;var SecureStore=_interopRequireWildcard(require("expo-secure-store"));function _getRequireWildcardCache(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return _getRequireWildcardCache=function(){return e},e}function _interopRequireWildcard(e){if(e&&e.__esModule)return e;if(null===e||"object"!==_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var u=n?Object.getOwnPropertyDescriptor(e,o):null;u&&(u.get||u.set)?Object.defineProperty(r,o,u):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}function save(t,r){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(SecureStore.setItemAsync(t,r));case 2:case"end":return e.stop()}})}function getValueFor(t){var r;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(SecureStore.getItemAsync(t));case 2:if(r=e.sent)return console.log("üîê Here's your value üîê \n"+r),e.abrupt("return",r);e.next=8;break;case 8:return console.log("No values stored under that key."),e.abrupt("return",r);case 10:case"end":return e.stop()}})}function formatDate(e){var t=new Date(e),r=""+(t.getMonth()+1),n=""+t.getDate(),o=t.getFullYear();return r.length<2&&(r="0"+r),n.length<2&&(n="0"+n),[o,r,n].join("-")}function subtractDays(e,t){var r=new Date(e);return r.setDate(r.getDate()-t),r}function numberWithCommas(e){return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}function proc(){console.log("proc function called")}
//# sourceMappingURL=helpers.min.js.map
